'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace labonorte_cliente
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://www.labonorte.com.br/mroticaservicelabo/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Saldo_produtoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private logarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private trans_filial_matrizOperationCompleted As System.Threading.SendOrPostCallback
        
        Private andamentos_OSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fila_produtosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fila_produtos_okOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Importa_produtoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private fila_triggerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private marca_trigger_okOperationCompleted As System.Threading.SendOrPostCallback
        
        Private os_inOperationCompleted As System.Threading.SendOrPostCallback
        
        Private os_in_transOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Pedido_balcaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaidaExtraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private extrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaOSFiliaisLabonorteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaAndamentoOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FilaEnvioMatrizOperationCompleted As System.Threading.SendOrPostCallback
        
        Private atualizaFilaEnvioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private verificaImportadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FilaRetornoMatrizOperationCompleted As System.Threading.SendOrPostCallback
        
        Private atualizaExportadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaPedidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaPedidoDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaPedidoItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaPedidoServicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaFaturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaFaturaNumeroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private importaFaturaItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.BTSistemas.My.MySettings.Default.mrotica_labonorte_cliente_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event Saldo_produtoCompleted As Saldo_produtoCompletedEventHandler
        
        '''<remarks/>
        Public Event logarCompleted As logarCompletedEventHandler
        
        '''<remarks/>
        Public Event trans_filial_matrizCompleted As trans_filial_matrizCompletedEventHandler
        
        '''<remarks/>
        Public Event andamentos_OSCompleted As andamentos_OSCompletedEventHandler
        
        '''<remarks/>
        Public Event fila_produtosCompleted As fila_produtosCompletedEventHandler
        
        '''<remarks/>
        Public Event fila_produtos_okCompleted As fila_produtos_okCompletedEventHandler
        
        '''<remarks/>
        Public Event Importa_produtoCompleted As Importa_produtoCompletedEventHandler
        
        '''<remarks/>
        Public Event fila_triggerCompleted As fila_triggerCompletedEventHandler
        
        '''<remarks/>
        Public Event marca_trigger_okCompleted As marca_trigger_okCompletedEventHandler
        
        '''<remarks/>
        Public Event os_inCompleted As os_inCompletedEventHandler
        
        '''<remarks/>
        Public Event os_in_transCompleted As os_in_transCompletedEventHandler
        
        '''<remarks/>
        Public Event Pedido_balcaoCompleted As Pedido_balcaoCompletedEventHandler
        
        '''<remarks/>
        Public Event SaidaExtraCompleted As SaidaExtraCompletedEventHandler
        
        '''<remarks/>
        Public Event extrasCompleted As extrasCompletedEventHandler
        
        '''<remarks/>
        Public Event importaOSCompleted As importaOSCompletedEventHandler
        
        '''<remarks/>
        Public Event importaOSFiliaisLabonorteCompleted As importaOSFiliaisLabonorteCompletedEventHandler
        
        '''<remarks/>
        Public Event importaAndamentoOSCompleted As importaAndamentoOSCompletedEventHandler
        
        '''<remarks/>
        Public Event FilaEnvioMatrizCompleted As FilaEnvioMatrizCompletedEventHandler
        
        '''<remarks/>
        Public Event atualizaFilaEnvioCompleted As atualizaFilaEnvioCompletedEventHandler
        
        '''<remarks/>
        Public Event verificaImportadosCompleted As verificaImportadosCompletedEventHandler
        
        '''<remarks/>
        Public Event FilaRetornoMatrizCompleted As FilaRetornoMatrizCompletedEventHandler
        
        '''<remarks/>
        Public Event atualizaExportadoCompleted As atualizaExportadoCompletedEventHandler
        
        '''<remarks/>
        Public Event importaPedidoCompleted As importaPedidoCompletedEventHandler
        
        '''<remarks/>
        Public Event importaPedidoDataCompleted As importaPedidoDataCompletedEventHandler
        
        '''<remarks/>
        Public Event importaPedidoItemCompleted As importaPedidoItemCompletedEventHandler
        
        '''<remarks/>
        Public Event importaPedidoServicoCompleted As importaPedidoServicoCompletedEventHandler
        
        '''<remarks/>
        Public Event importaFaturaCompleted As importaFaturaCompletedEventHandler
        
        '''<remarks/>
        Public Event importaFaturaNumeroCompleted As importaFaturaNumeroCompletedEventHandler
        
        '''<remarks/>
        Public Event importaFaturaItemCompleted As importaFaturaItemCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/Saldo_produto", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Saldo_produto(ByVal x_cod_produto As Integer, ByVal x_id_filial As Integer) As Integer
            Dim results() As Object = Me.Invoke("Saldo_produto", New Object() {x_cod_produto, x_id_filial})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Saldo_produtoAsync(ByVal x_cod_produto As Integer, ByVal x_id_filial As Integer)
            Me.Saldo_produtoAsync(x_cod_produto, x_id_filial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Saldo_produtoAsync(ByVal x_cod_produto As Integer, ByVal x_id_filial As Integer, ByVal userState As Object)
            If (Me.Saldo_produtoOperationCompleted Is Nothing) Then
                Me.Saldo_produtoOperationCompleted = AddressOf Me.OnSaldo_produtoOperationCompleted
            End If
            Me.InvokeAsync("Saldo_produto", New Object() {x_cod_produto, x_id_filial}, Me.Saldo_produtoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaldo_produtoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Saldo_produtoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Saldo_produtoCompleted(Me, New Saldo_produtoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/logar", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function logar(ByVal loja As Integer, ByVal cred As String) As Integer
            Dim results() As Object = Me.Invoke("logar", New Object() {loja, cred})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub logarAsync(ByVal loja As Integer, ByVal cred As String)
            Me.logarAsync(loja, cred, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub logarAsync(ByVal loja As Integer, ByVal cred As String, ByVal userState As Object)
            If (Me.logarOperationCompleted Is Nothing) Then
                Me.logarOperationCompleted = AddressOf Me.OnlogarOperationCompleted
            End If
            Me.InvokeAsync("logar", New Object() {loja, cred}, Me.logarOperationCompleted, userState)
        End Sub
        
        Private Sub OnlogarOperationCompleted(ByVal arg As Object)
            If (Not (Me.logarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent logarCompleted(Me, New logarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/trans_filial_matriz", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function trans_filial_matriz(ByVal tbinst As System.Data.DataTable, ByVal origem As Integer) As Boolean
            Dim results() As Object = Me.Invoke("trans_filial_matriz", New Object() {tbinst, origem})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub trans_filial_matrizAsync(ByVal tbinst As System.Data.DataTable, ByVal origem As Integer)
            Me.trans_filial_matrizAsync(tbinst, origem, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub trans_filial_matrizAsync(ByVal tbinst As System.Data.DataTable, ByVal origem As Integer, ByVal userState As Object)
            If (Me.trans_filial_matrizOperationCompleted Is Nothing) Then
                Me.trans_filial_matrizOperationCompleted = AddressOf Me.Ontrans_filial_matrizOperationCompleted
            End If
            Me.InvokeAsync("trans_filial_matriz", New Object() {tbinst, origem}, Me.trans_filial_matrizOperationCompleted, userState)
        End Sub
        
        Private Sub Ontrans_filial_matrizOperationCompleted(ByVal arg As Object)
            If (Not (Me.trans_filial_matrizCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent trans_filial_matrizCompleted(Me, New trans_filial_matrizCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/andamentos_OS", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function andamentos_OS(ByVal x_id_filial As Integer, ByVal x_os As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("andamentos_OS", New Object() {x_id_filial, x_os})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub andamentos_OSAsync(ByVal x_id_filial As Integer, ByVal x_os As Integer)
            Me.andamentos_OSAsync(x_id_filial, x_os, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub andamentos_OSAsync(ByVal x_id_filial As Integer, ByVal x_os As Integer, ByVal userState As Object)
            If (Me.andamentos_OSOperationCompleted Is Nothing) Then
                Me.andamentos_OSOperationCompleted = AddressOf Me.Onandamentos_OSOperationCompleted
            End If
            Me.InvokeAsync("andamentos_OS", New Object() {x_id_filial, x_os}, Me.andamentos_OSOperationCompleted, userState)
        End Sub
        
        Private Sub Onandamentos_OSOperationCompleted(ByVal arg As Object)
            If (Not (Me.andamentos_OSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent andamentos_OSCompleted(Me, New andamentos_OSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/fila_produtos", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fila_produtos() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("fila_produtos", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fila_produtosAsync()
            Me.fila_produtosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fila_produtosAsync(ByVal userState As Object)
            If (Me.fila_produtosOperationCompleted Is Nothing) Then
                Me.fila_produtosOperationCompleted = AddressOf Me.Onfila_produtosOperationCompleted
            End If
            Me.InvokeAsync("fila_produtos", New Object(-1) {}, Me.fila_produtosOperationCompleted, userState)
        End Sub
        
        Private Sub Onfila_produtosOperationCompleted(ByVal arg As Object)
            If (Not (Me.fila_produtosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fila_produtosCompleted(Me, New fila_produtosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/fila_produtos_ok", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fila_produtos_ok(ByVal id_fila As Object) As String
            Dim results() As Object = Me.Invoke("fila_produtos_ok", New Object() {id_fila})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fila_produtos_okAsync(ByVal id_fila As Object)
            Me.fila_produtos_okAsync(id_fila, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fila_produtos_okAsync(ByVal id_fila As Object, ByVal userState As Object)
            If (Me.fila_produtos_okOperationCompleted Is Nothing) Then
                Me.fila_produtos_okOperationCompleted = AddressOf Me.Onfila_produtos_okOperationCompleted
            End If
            Me.InvokeAsync("fila_produtos_ok", New Object() {id_fila}, Me.fila_produtos_okOperationCompleted, userState)
        End Sub
        
        Private Sub Onfila_produtos_okOperationCompleted(ByVal arg As Object)
            If (Not (Me.fila_produtos_okCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fila_produtos_okCompleted(Me, New fila_produtos_okCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/Importa_produto", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Importa_produto(ByVal x_cod_tabela As Long, ByVal tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Importa_produto", New Object() {x_cod_tabela, tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Importa_produtoAsync(ByVal x_cod_tabela As Long, ByVal tipo As String)
            Me.Importa_produtoAsync(x_cod_tabela, tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Importa_produtoAsync(ByVal x_cod_tabela As Long, ByVal tipo As String, ByVal userState As Object)
            If (Me.Importa_produtoOperationCompleted Is Nothing) Then
                Me.Importa_produtoOperationCompleted = AddressOf Me.OnImporta_produtoOperationCompleted
            End If
            Me.InvokeAsync("Importa_produto", New Object() {x_cod_tabela, tipo}, Me.Importa_produtoOperationCompleted, userState)
        End Sub
        
        Private Sub OnImporta_produtoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Importa_produtoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Importa_produtoCompleted(Me, New Importa_produtoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/fila_trigger", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function fila_trigger() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("fila_trigger", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub fila_triggerAsync()
            Me.fila_triggerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub fila_triggerAsync(ByVal userState As Object)
            If (Me.fila_triggerOperationCompleted Is Nothing) Then
                Me.fila_triggerOperationCompleted = AddressOf Me.Onfila_triggerOperationCompleted
            End If
            Me.InvokeAsync("fila_trigger", New Object(-1) {}, Me.fila_triggerOperationCompleted, userState)
        End Sub
        
        Private Sub Onfila_triggerOperationCompleted(ByVal arg As Object)
            If (Not (Me.fila_triggerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent fila_triggerCompleted(Me, New fila_triggerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/marca_trigger_ok", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function marca_trigger_ok(ByVal id_fila As Integer) As Object
            Dim results() As Object = Me.Invoke("marca_trigger_ok", New Object() {id_fila})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub marca_trigger_okAsync(ByVal id_fila As Integer)
            Me.marca_trigger_okAsync(id_fila, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub marca_trigger_okAsync(ByVal id_fila As Integer, ByVal userState As Object)
            If (Me.marca_trigger_okOperationCompleted Is Nothing) Then
                Me.marca_trigger_okOperationCompleted = AddressOf Me.Onmarca_trigger_okOperationCompleted
            End If
            Me.InvokeAsync("marca_trigger_ok", New Object() {id_fila}, Me.marca_trigger_okOperationCompleted, userState)
        End Sub
        
        Private Sub Onmarca_trigger_okOperationCompleted(ByVal arg As Object)
            If (Not (Me.marca_trigger_okCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent marca_trigger_okCompleted(Me, New marca_trigger_okCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/os_in", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function os_in(ByVal tOS As System.Data.DataSet, ByVal dsTrat As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("os_in", New Object() {tOS, dsTrat})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub os_inAsync(ByVal tOS As System.Data.DataSet, ByVal dsTrat As System.Data.DataSet)
            Me.os_inAsync(tOS, dsTrat, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub os_inAsync(ByVal tOS As System.Data.DataSet, ByVal dsTrat As System.Data.DataSet, ByVal userState As Object)
            If (Me.os_inOperationCompleted Is Nothing) Then
                Me.os_inOperationCompleted = AddressOf Me.Onos_inOperationCompleted
            End If
            Me.InvokeAsync("os_in", New Object() {tOS, dsTrat}, Me.os_inOperationCompleted, userState)
        End Sub
        
        Private Sub Onos_inOperationCompleted(ByVal arg As Object)
            If (Not (Me.os_inCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent os_inCompleted(Me, New os_inCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/os_in_trans", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function os_in_trans(ByVal tOS As System.Data.DataSet, ByVal dsTrat As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("os_in_trans", New Object() {tOS, dsTrat})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub os_in_transAsync(ByVal tOS As System.Data.DataSet, ByVal dsTrat As System.Data.DataSet)
            Me.os_in_transAsync(tOS, dsTrat, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub os_in_transAsync(ByVal tOS As System.Data.DataSet, ByVal dsTrat As System.Data.DataSet, ByVal userState As Object)
            If (Me.os_in_transOperationCompleted Is Nothing) Then
                Me.os_in_transOperationCompleted = AddressOf Me.Onos_in_transOperationCompleted
            End If
            Me.InvokeAsync("os_in_trans", New Object() {tOS, dsTrat}, Me.os_in_transOperationCompleted, userState)
        End Sub
        
        Private Sub Onos_in_transOperationCompleted(ByVal arg As Object)
            If (Not (Me.os_in_transCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent os_in_transCompleted(Me, New os_in_transCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/Pedido_balcao", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Pedido_balcao(ByVal num_pedido As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Pedido_balcao", New Object() {num_pedido})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Pedido_balcaoAsync(ByVal num_pedido As Integer)
            Me.Pedido_balcaoAsync(num_pedido, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Pedido_balcaoAsync(ByVal num_pedido As Integer, ByVal userState As Object)
            If (Me.Pedido_balcaoOperationCompleted Is Nothing) Then
                Me.Pedido_balcaoOperationCompleted = AddressOf Me.OnPedido_balcaoOperationCompleted
            End If
            Me.InvokeAsync("Pedido_balcao", New Object() {num_pedido}, Me.Pedido_balcaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPedido_balcaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Pedido_balcaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Pedido_balcaoCompleted(Me, New Pedido_balcaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/SaidaExtra", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaidaExtra(ByVal id_Filial As Integer, ByVal os As Integer, ByVal OD As Boolean, ByVal OE As Boolean, ByVal motivo As String) As String
            Dim results() As Object = Me.Invoke("SaidaExtra", New Object() {id_Filial, os, OD, OE, motivo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaidaExtraAsync(ByVal id_Filial As Integer, ByVal os As Integer, ByVal OD As Boolean, ByVal OE As Boolean, ByVal motivo As String)
            Me.SaidaExtraAsync(id_Filial, os, OD, OE, motivo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaidaExtraAsync(ByVal id_Filial As Integer, ByVal os As Integer, ByVal OD As Boolean, ByVal OE As Boolean, ByVal motivo As String, ByVal userState As Object)
            If (Me.SaidaExtraOperationCompleted Is Nothing) Then
                Me.SaidaExtraOperationCompleted = AddressOf Me.OnSaidaExtraOperationCompleted
            End If
            Me.InvokeAsync("SaidaExtra", New Object() {id_Filial, os, OD, OE, motivo}, Me.SaidaExtraOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaidaExtraOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaidaExtraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaidaExtraCompleted(Me, New SaidaExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/extras", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function extras(ByVal di As String, ByVal df As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("extras", New Object() {di, df})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub extrasAsync(ByVal di As String, ByVal df As String)
            Me.extrasAsync(di, df, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub extrasAsync(ByVal di As String, ByVal df As String, ByVal userState As Object)
            If (Me.extrasOperationCompleted Is Nothing) Then
                Me.extrasOperationCompleted = AddressOf Me.OnextrasOperationCompleted
            End If
            Me.InvokeAsync("extras", New Object() {di, df}, Me.extrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnextrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.extrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent extrasCompleted(Me, New extrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaOS", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaOS(ByVal codosini As Integer, ByVal codosfim As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaOS", New Object() {codosini, codosfim, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaOSAsync(ByVal codosini As Integer, ByVal codosfim As Integer, ByVal idfilial As Integer)
            Me.importaOSAsync(codosini, codosfim, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaOSAsync(ByVal codosini As Integer, ByVal codosfim As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaOSOperationCompleted Is Nothing) Then
                Me.importaOSOperationCompleted = AddressOf Me.OnimportaOSOperationCompleted
            End If
            Me.InvokeAsync("importaOS", New Object() {codosini, codosfim, idfilial}, Me.importaOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaOSCompleted(Me, New importaOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaOSFiliaisLabonorte", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaOSFiliaisLabonorte(ByVal di As Date, ByVal df As Date) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaOSFiliaisLabonorte", New Object() {di, df})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaOSFiliaisLabonorteAsync(ByVal di As Date, ByVal df As Date)
            Me.importaOSFiliaisLabonorteAsync(di, df, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaOSFiliaisLabonorteAsync(ByVal di As Date, ByVal df As Date, ByVal userState As Object)
            If (Me.importaOSFiliaisLabonorteOperationCompleted Is Nothing) Then
                Me.importaOSFiliaisLabonorteOperationCompleted = AddressOf Me.OnimportaOSFiliaisLabonorteOperationCompleted
            End If
            Me.InvokeAsync("importaOSFiliaisLabonorte", New Object() {di, df}, Me.importaOSFiliaisLabonorteOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaOSFiliaisLabonorteOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaOSFiliaisLabonorteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaOSFiliaisLabonorteCompleted(Me, New importaOSFiliaisLabonorteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaAndamentoOS", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaAndamentoOS(ByVal codos As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaAndamentoOS", New Object() {codos, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaAndamentoOSAsync(ByVal codos As Integer, ByVal idfilial As Integer)
            Me.importaAndamentoOSAsync(codos, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaAndamentoOSAsync(ByVal codos As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaAndamentoOSOperationCompleted Is Nothing) Then
                Me.importaAndamentoOSOperationCompleted = AddressOf Me.OnimportaAndamentoOSOperationCompleted
            End If
            Me.InvokeAsync("importaAndamentoOS", New Object() {codos, idfilial}, Me.importaAndamentoOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaAndamentoOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaAndamentoOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaAndamentoOSCompleted(Me, New importaAndamentoOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/FilaEnvioMatriz", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub FilaEnvioMatriz(ByVal idfila As Integer, ByVal origem As Integer, ByVal gerado As Integer, ByVal destino As Integer, ByVal instrucao As String, ByVal datainc As Date, ByVal dataproc As Date)
            Me.Invoke("FilaEnvioMatriz", New Object() {idfila, origem, gerado, destino, instrucao, datainc, dataproc})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FilaEnvioMatrizAsync(ByVal idfila As Integer, ByVal origem As Integer, ByVal gerado As Integer, ByVal destino As Integer, ByVal instrucao As String, ByVal datainc As Date, ByVal dataproc As Date)
            Me.FilaEnvioMatrizAsync(idfila, origem, gerado, destino, instrucao, datainc, dataproc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FilaEnvioMatrizAsync(ByVal idfila As Integer, ByVal origem As Integer, ByVal gerado As Integer, ByVal destino As Integer, ByVal instrucao As String, ByVal datainc As Date, ByVal dataproc As Date, ByVal userState As Object)
            If (Me.FilaEnvioMatrizOperationCompleted Is Nothing) Then
                Me.FilaEnvioMatrizOperationCompleted = AddressOf Me.OnFilaEnvioMatrizOperationCompleted
            End If
            Me.InvokeAsync("FilaEnvioMatriz", New Object() {idfila, origem, gerado, destino, instrucao, datainc, dataproc}, Me.FilaEnvioMatrizOperationCompleted, userState)
        End Sub
        
        Private Sub OnFilaEnvioMatrizOperationCompleted(ByVal arg As Object)
            If (Not (Me.FilaEnvioMatrizCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FilaEnvioMatrizCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/atualizaFilaEnvio", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub atualizaFilaEnvio(ByVal idfila As Integer, ByVal origem As Integer, ByVal data As Date)
            Me.Invoke("atualizaFilaEnvio", New Object() {idfila, origem, data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub atualizaFilaEnvioAsync(ByVal idfila As Integer, ByVal origem As Integer, ByVal data As Date)
            Me.atualizaFilaEnvioAsync(idfila, origem, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub atualizaFilaEnvioAsync(ByVal idfila As Integer, ByVal origem As Integer, ByVal data As Date, ByVal userState As Object)
            If (Me.atualizaFilaEnvioOperationCompleted Is Nothing) Then
                Me.atualizaFilaEnvioOperationCompleted = AddressOf Me.OnatualizaFilaEnvioOperationCompleted
            End If
            Me.InvokeAsync("atualizaFilaEnvio", New Object() {idfila, origem, data}, Me.atualizaFilaEnvioOperationCompleted, userState)
        End Sub
        
        Private Sub OnatualizaFilaEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.atualizaFilaEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent atualizaFilaEnvioCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/verificaImportados", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function verificaImportados(ByVal idfila As Integer, ByVal origem As Integer) As Boolean
            Dim results() As Object = Me.Invoke("verificaImportados", New Object() {idfila, origem})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub verificaImportadosAsync(ByVal idfila As Integer, ByVal origem As Integer)
            Me.verificaImportadosAsync(idfila, origem, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub verificaImportadosAsync(ByVal idfila As Integer, ByVal origem As Integer, ByVal userState As Object)
            If (Me.verificaImportadosOperationCompleted Is Nothing) Then
                Me.verificaImportadosOperationCompleted = AddressOf Me.OnverificaImportadosOperationCompleted
            End If
            Me.InvokeAsync("verificaImportados", New Object() {idfila, origem}, Me.verificaImportadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnverificaImportadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.verificaImportadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent verificaImportadosCompleted(Me, New verificaImportadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/FilaRetornoMatriz", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FilaRetornoMatriz(ByVal filial As Integer, ByVal nReg As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("FilaRetornoMatriz", New Object() {filial, nReg})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FilaRetornoMatrizAsync(ByVal filial As Integer, ByVal nReg As Integer)
            Me.FilaRetornoMatrizAsync(filial, nReg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FilaRetornoMatrizAsync(ByVal filial As Integer, ByVal nReg As Integer, ByVal userState As Object)
            If (Me.FilaRetornoMatrizOperationCompleted Is Nothing) Then
                Me.FilaRetornoMatrizOperationCompleted = AddressOf Me.OnFilaRetornoMatrizOperationCompleted
            End If
            Me.InvokeAsync("FilaRetornoMatriz", New Object() {filial, nReg}, Me.FilaRetornoMatrizOperationCompleted, userState)
        End Sub
        
        Private Sub OnFilaRetornoMatrizOperationCompleted(ByVal arg As Object)
            If (Not (Me.FilaRetornoMatrizCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FilaRetornoMatrizCompleted(Me, New FilaRetornoMatrizCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/atualizaExportado", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub atualizaExportado(ByVal idfila As Integer, ByVal destino As Integer, ByVal data As Date)
            Me.Invoke("atualizaExportado", New Object() {idfila, destino, data})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub atualizaExportadoAsync(ByVal idfila As Integer, ByVal destino As Integer, ByVal data As Date)
            Me.atualizaExportadoAsync(idfila, destino, data, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub atualizaExportadoAsync(ByVal idfila As Integer, ByVal destino As Integer, ByVal data As Date, ByVal userState As Object)
            If (Me.atualizaExportadoOperationCompleted Is Nothing) Then
                Me.atualizaExportadoOperationCompleted = AddressOf Me.OnatualizaExportadoOperationCompleted
            End If
            Me.InvokeAsync("atualizaExportado", New Object() {idfila, destino, data}, Me.atualizaExportadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnatualizaExportadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.atualizaExportadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent atualizaExportadoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaPedido", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaPedido(ByVal numpedido As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaPedido", New Object() {numpedido, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaPedidoAsync(ByVal numpedido As Integer, ByVal idfilial As Integer)
            Me.importaPedidoAsync(numpedido, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaPedidoAsync(ByVal numpedido As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaPedidoOperationCompleted Is Nothing) Then
                Me.importaPedidoOperationCompleted = AddressOf Me.OnimportaPedidoOperationCompleted
            End If
            Me.InvokeAsync("importaPedido", New Object() {numpedido, idfilial}, Me.importaPedidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaPedidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaPedidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaPedidoCompleted(Me, New importaPedidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaPedidoData", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaPedidoData(ByVal idfilial As Integer, ByVal di As Date, ByVal df As Date) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaPedidoData", New Object() {idfilial, di, df})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaPedidoDataAsync(ByVal idfilial As Integer, ByVal di As Date, ByVal df As Date)
            Me.importaPedidoDataAsync(idfilial, di, df, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaPedidoDataAsync(ByVal idfilial As Integer, ByVal di As Date, ByVal df As Date, ByVal userState As Object)
            If (Me.importaPedidoDataOperationCompleted Is Nothing) Then
                Me.importaPedidoDataOperationCompleted = AddressOf Me.OnimportaPedidoDataOperationCompleted
            End If
            Me.InvokeAsync("importaPedidoData", New Object() {idfilial, di, df}, Me.importaPedidoDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaPedidoDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaPedidoDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaPedidoDataCompleted(Me, New importaPedidoDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaPedidoItem", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaPedidoItem(ByVal numpedido As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaPedidoItem", New Object() {numpedido, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaPedidoItemAsync(ByVal numpedido As Integer, ByVal idfilial As Integer)
            Me.importaPedidoItemAsync(numpedido, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaPedidoItemAsync(ByVal numpedido As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaPedidoItemOperationCompleted Is Nothing) Then
                Me.importaPedidoItemOperationCompleted = AddressOf Me.OnimportaPedidoItemOperationCompleted
            End If
            Me.InvokeAsync("importaPedidoItem", New Object() {numpedido, idfilial}, Me.importaPedidoItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaPedidoItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaPedidoItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaPedidoItemCompleted(Me, New importaPedidoItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaPedidoServico", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaPedidoServico(ByVal numpedido As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaPedidoServico", New Object() {numpedido, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaPedidoServicoAsync(ByVal numpedido As Integer, ByVal idfilial As Integer)
            Me.importaPedidoServicoAsync(numpedido, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaPedidoServicoAsync(ByVal numpedido As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaPedidoServicoOperationCompleted Is Nothing) Then
                Me.importaPedidoServicoOperationCompleted = AddressOf Me.OnimportaPedidoServicoOperationCompleted
            End If
            Me.InvokeAsync("importaPedidoServico", New Object() {numpedido, idfilial}, Me.importaPedidoServicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaPedidoServicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaPedidoServicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaPedidoServicoCompleted(Me, New importaPedidoServicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaFatura", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaFatura(ByVal idfilial As Integer, ByVal di As Date, ByVal df As Date) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaFatura", New Object() {idfilial, di, df})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaFaturaAsync(ByVal idfilial As Integer, ByVal di As Date, ByVal df As Date)
            Me.importaFaturaAsync(idfilial, di, df, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaFaturaAsync(ByVal idfilial As Integer, ByVal di As Date, ByVal df As Date, ByVal userState As Object)
            If (Me.importaFaturaOperationCompleted Is Nothing) Then
                Me.importaFaturaOperationCompleted = AddressOf Me.OnimportaFaturaOperationCompleted
            End If
            Me.InvokeAsync("importaFatura", New Object() {idfilial, di, df}, Me.importaFaturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaFaturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaFaturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaFaturaCompleted(Me, New importaFaturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaFaturaNumero", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaFaturaNumero(ByVal codfatura As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaFaturaNumero", New Object() {codfatura, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaFaturaNumeroAsync(ByVal codfatura As Integer, ByVal idfilial As Integer)
            Me.importaFaturaNumeroAsync(codfatura, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaFaturaNumeroAsync(ByVal codfatura As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaFaturaNumeroOperationCompleted Is Nothing) Then
                Me.importaFaturaNumeroOperationCompleted = AddressOf Me.OnimportaFaturaNumeroOperationCompleted
            End If
            Me.InvokeAsync("importaFaturaNumero", New Object() {codfatura, idfilial}, Me.importaFaturaNumeroOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaFaturaNumeroOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaFaturaNumeroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaFaturaNumeroCompleted(Me, New importaFaturaNumeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.labonorte.com.br/mroticaservicelabo/importaFaturaItem", RequestNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", ResponseNamespace:="http://www.labonorte.com.br/mroticaservicelabo/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function importaFaturaItem(ByVal codfatura As Integer, ByVal idfilial As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("importaFaturaItem", New Object() {codfatura, idfilial})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub importaFaturaItemAsync(ByVal codfatura As Integer, ByVal idfilial As Integer)
            Me.importaFaturaItemAsync(codfatura, idfilial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub importaFaturaItemAsync(ByVal codfatura As Integer, ByVal idfilial As Integer, ByVal userState As Object)
            If (Me.importaFaturaItemOperationCompleted Is Nothing) Then
                Me.importaFaturaItemOperationCompleted = AddressOf Me.OnimportaFaturaItemOperationCompleted
            End If
            Me.InvokeAsync("importaFaturaItem", New Object() {codfatura, idfilial}, Me.importaFaturaItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnimportaFaturaItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.importaFaturaItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent importaFaturaItemCompleted(Me, New importaFaturaItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Saldo_produtoCompletedEventHandler(ByVal sender As Object, ByVal e As Saldo_produtoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Saldo_produtoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub logarCompletedEventHandler(ByVal sender As Object, ByVal e As logarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class logarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub trans_filial_matrizCompletedEventHandler(ByVal sender As Object, ByVal e As trans_filial_matrizCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class trans_filial_matrizCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub andamentos_OSCompletedEventHandler(ByVal sender As Object, ByVal e As andamentos_OSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class andamentos_OSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub fila_produtosCompletedEventHandler(ByVal sender As Object, ByVal e As fila_produtosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fila_produtosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub fila_produtos_okCompletedEventHandler(ByVal sender As Object, ByVal e As fila_produtos_okCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fila_produtos_okCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Importa_produtoCompletedEventHandler(ByVal sender As Object, ByVal e As Importa_produtoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Importa_produtoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub fila_triggerCompletedEventHandler(ByVal sender As Object, ByVal e As fila_triggerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class fila_triggerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub marca_trigger_okCompletedEventHandler(ByVal sender As Object, ByVal e As marca_trigger_okCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class marca_trigger_okCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub os_inCompletedEventHandler(ByVal sender As Object, ByVal e As os_inCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class os_inCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub os_in_transCompletedEventHandler(ByVal sender As Object, ByVal e As os_in_transCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class os_in_transCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Pedido_balcaoCompletedEventHandler(ByVal sender As Object, ByVal e As Pedido_balcaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Pedido_balcaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaidaExtraCompletedEventHandler(ByVal sender As Object, ByVal e As SaidaExtraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaidaExtraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub extrasCompletedEventHandler(ByVal sender As Object, ByVal e As extrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class extrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaOSCompletedEventHandler(ByVal sender As Object, ByVal e As importaOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaOSFiliaisLabonorteCompletedEventHandler(ByVal sender As Object, ByVal e As importaOSFiliaisLabonorteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaOSFiliaisLabonorteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaAndamentoOSCompletedEventHandler(ByVal sender As Object, ByVal e As importaAndamentoOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaAndamentoOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FilaEnvioMatrizCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub atualizaFilaEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub verificaImportadosCompletedEventHandler(ByVal sender As Object, ByVal e As verificaImportadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class verificaImportadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FilaRetornoMatrizCompletedEventHandler(ByVal sender As Object, ByVal e As FilaRetornoMatrizCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FilaRetornoMatrizCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub atualizaExportadoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaPedidoCompletedEventHandler(ByVal sender As Object, ByVal e As importaPedidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaPedidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaPedidoDataCompletedEventHandler(ByVal sender As Object, ByVal e As importaPedidoDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaPedidoDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaPedidoItemCompletedEventHandler(ByVal sender As Object, ByVal e As importaPedidoItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaPedidoItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaPedidoServicoCompletedEventHandler(ByVal sender As Object, ByVal e As importaPedidoServicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaPedidoServicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaFaturaCompletedEventHandler(ByVal sender As Object, ByVal e As importaFaturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaFaturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaFaturaNumeroCompletedEventHandler(ByVal sender As Object, ByVal e As importaFaturaNumeroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaFaturaNumeroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub importaFaturaItemCompletedEventHandler(ByVal sender As Object, ByVal e As importaFaturaItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class importaFaturaItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
